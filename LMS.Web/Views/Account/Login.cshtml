@using LMS.DomainModel.Models
@model LMS.DomainModel.ApplicationClasses.LoginViewModel


@{
    ViewBag.Title = "Log in";
}

@*<h2>@ViewBag.Title.</h2>*@
@*<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>
            }
        </section>
    </div>
</div>*@

<div class="lms-login">
    <div class="login-form">
        <h3>Login to your Account</h3>

        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <md-input-container class="md-block">
                <!-- Use floating label instead of placeholder -->
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <md-icon md-font-set="material-icons"> person </md-icon>
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </md-input-container>
            <md-input-container class="md-block">
                <!-- Use floating label instead of placeholder -->
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                <md-icon md-font-set="material-icons"> https </md-icon>
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </md-input-container>
            <md-button type="submit">Login</md-button>
            @*<a href="">Forgot Password?</a>*@

        }
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}